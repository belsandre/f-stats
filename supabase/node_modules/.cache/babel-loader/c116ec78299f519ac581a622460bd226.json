{"ast":null,"code":"var _jsxFileName = \"/Users/changxu/Dev/f-stats/supabase/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table'; // import Form from \"./Form\";\n\nimport { supabase } from \"./supabaseClient\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clinics: []\n    };\n  }\n\n  componentDidMount() {\n    async function fetchClinics() {\n      try {\n        let {\n          data: clinics,\n          error\n        } = await supabase.from('clinics').select('*').range(0, 1);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    fetchClinics();\n  }\n\n  render() {\n    const {\n      clinics\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fertility clinics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Show top 10 clinics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        clinicData: clinics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this);\n  }\n  /*\n  \n    const [clinics, setClinics] = useState([]);\n  \n    useEffect(() => {\n      fetchClinics().catch(console.error);\n    }, []);\n  \n    async function fetchClinics() {\n      let { data: clinics, error } = await supabase\n        .from('clinics')\n        .select('*')\n        .range(0, 1);\n      if (error) console.log(\"error\", error);\n      else setClinics(clinics);\n    }\n  \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Form />\n  \n          <table>\n            <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>City</th>\n                  <th>State</th>\n                </tr>\n            </thead>\n            <tbody>\n              {clinics.length ? (\n                  clinics.map((clinic) => (\n                    <tr>\n                      <td>{clinic.name}</td>\n                      <td>{clinic.city}</td>\n                      <td>{clinic.state}</td>\n                    </tr>\n                  ))\n              ) : (\n                  <span\n                      className={\n                          \"h-full flex justify-center items-center\"\n                      }\n                  >\n                      No clinics\n                  </span>\n              )}\n            </tbody>\n          </table>\n        </header>\n      </div>\n    );\n  \n  */\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/changxu/Dev/f-stats/supabase/src/App.js"],"names":["React","Component","Table","supabase","App","state","clinics","componentDidMount","fetchClinics","data","error","from","select","range","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAE;AADH,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAG;AAClB,mBAAeC,YAAf,GAA8B;AAC5B,UAAI;AACF,YAAI;AAAEC,UAAAA,IAAI,EAAEH,OAAR;AAAiBI,UAAAA;AAAjB,YAA2B,MAAMP,QAAQ,CAC1CQ,IADkC,CAC7B,SAD6B,EAElCC,MAFkC,CAE3B,GAF2B,EAGlCC,KAHkC,CAG5B,CAH4B,EAGzB,CAHyB,CAArC;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD,OAPD,CAOE,OAAOC,KAAP,EAAc;AACdI,QAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACD;AACF;;AAEDF,IAAAA,YAAY;AACb;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AACI,QAAA,UAAU,EAAEC;AADhB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA3F4B;;AA8F5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Table from './Table';\n// import Form from \"./Form\";\nimport { supabase } from \"./supabaseClient\";\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    clinics: []\n  };\n\n  componentDidMount() {\n    async function fetchClinics() {\n      try {\n        let { data: clinics, error } = await supabase\n          .from('clinics')\n          .select('*')\n          .range(0, 1);\n          \n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    fetchClinics();\n  }\n\n  render() {\n      const { clinics } = this.state;\n      \n      return (\n          <div className=\"container\">\n              <h1>Fertility clinics</h1>\n              <p>Show top 10 clinics</p>\n              <Table\n                  clinicData={clinics}\n              />\n          </div>\n      );\n  }\n\n\n/*\n\n  const [clinics, setClinics] = useState([]);\n\n  useEffect(() => {\n    fetchClinics().catch(console.error);\n  }, []);\n\n  async function fetchClinics() {\n    let { data: clinics, error } = await supabase\n      .from('clinics')\n      .select('*')\n      .range(0, 1);\n    if (error) console.log(\"error\", error);\n    else setClinics(clinics);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Form />\n\n        <table>\n          <thead>\n              <tr>\n                <th>Name</th>\n                <th>City</th>\n                <th>State</th>\n              </tr>\n          </thead>\n          <tbody>\n            {clinics.length ? (\n                clinics.map((clinic) => (\n                  <tr>\n                    <td>{clinic.name}</td>\n                    <td>{clinic.city}</td>\n                    <td>{clinic.state}</td>\n                  </tr>\n                ))\n            ) : (\n                <span\n                    className={\n                        \"h-full flex justify-center items-center\"\n                    }\n                >\n                    No clinics\n                </span>\n            )}\n          </tbody>\n        </table>\n      </header>\n    </div>\n  );\n\n*/\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}