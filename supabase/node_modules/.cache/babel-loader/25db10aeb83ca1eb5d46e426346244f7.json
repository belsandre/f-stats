{"ast":null,"code":"var _jsxFileName = \"/Users/changxu/Dev/f-stats/supabase/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // import Table from './Table';\n\nimport Form from \"./Form\";\nimport { supabase } from \"./supabaseClient\";\nimport './App.css';\n/*\nclass App extends Component {\n  state = {\n    clinics: []\n  };\n\n  componentDidMount() {\n    async function fetchClinics() {\n      try {\n        let { data: clinics, error } = await supabase\n          .from('clinics')\n          .select('*')\n          .range(0, 1);\n          \n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    fetchClinics();\n  }\n\n  render() {\n      const { clinics } = this.state;\n      \n      return (\n          <div className=\"container\">\n              <h1>Fertility clinics</h1>\n              <p>Show top 10 clinics</p>\n              <Table\n                  clinicData={clinics}\n              />\n          </div>\n      );\n  }\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [clinics, setClinics] = useState([]);\n  useEffect(() => {\n    fetchClinics().catch(console.error);\n  }, []);\n\n  async function fetchClinics() {\n    let {\n      data: clinics,\n      error\n    } = await supabase.from('clinics').select('*').range(0, 2);\n    if (error) console.log(\"error\", error);else setClinics(clinics);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: clinics.length ? clinics.map(clinic => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: clinic.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: clinic.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: clinic.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h-full flex justify-center items-center\",\n            children: \"No clinics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vjbMqqFXul9QX4q/vhrigqzeYzQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/changxu/Dev/f-stats/supabase/src/App.js"],"names":["useState","useEffect","Form","supabase","App","clinics","setClinics","fetchClinics","catch","console","error","data","from","select","range","log","length","map","clinic","name","city","state"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,WAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,GAAGC,KAAf,CAAqBC,OAAO,CAACC,KAA7B;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeH,YAAf,GAA8B;AAC5B,QAAI;AAAEI,MAAAA,IAAI,EAAEN,OAAR;AAAiBK,MAAAA;AAAjB,QAA2B,MAAMP,QAAQ,CAC1CS,IADkC,CAC7B,SAD6B,EAElCC,MAFkC,CAE3B,GAF2B,EAGlCC,KAHkC,CAG5B,CAH4B,EAGzB,CAHyB,CAArC;AAIA,QAAIJ,KAAJ,EAAWD,OAAO,CAACM,GAAR,CAAY,OAAZ,EAAqBL,KAArB,EAAX,KACKJ,UAAU,CAACD,OAAD,CAAV;AACN;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,gCACE;AAAA,iCACI;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,oBACGA,OAAO,CAACW,MAAR,GACGX,OAAO,CAACY,GAAR,CAAaC,MAAD,iBACV;AAAA,oCACE;AAAA,wBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKF,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADH,gBASG;AACI,YAAA,SAAS,EACL,yCAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVN;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GApDQjB,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\n// import Table from './Table';\nimport Form from \"./Form\";\nimport { supabase } from \"./supabaseClient\";\nimport './App.css';\n\n/*\nclass App extends Component {\n  state = {\n    clinics: []\n  };\n\n  componentDidMount() {\n    async function fetchClinics() {\n      try {\n        let { data: clinics, error } = await supabase\n          .from('clinics')\n          .select('*')\n          .range(0, 1);\n          \n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    fetchClinics();\n  }\n\n  render() {\n      const { clinics } = this.state;\n      \n      return (\n          <div className=\"container\">\n              <h1>Fertility clinics</h1>\n              <p>Show top 10 clinics</p>\n              <Table\n                  clinicData={clinics}\n              />\n          </div>\n      );\n  }\n*/\n\nfunction App () {\n  const [clinics, setClinics] = useState([]);\n\n  useEffect(() => {\n    fetchClinics().catch(console.error);\n  }, []);\n\n  async function fetchClinics() {\n    let { data: clinics, error } = await supabase\n      .from('clinics')\n      .select('*')\n      .range(0, 2);\n    if (error) console.log(\"error\", error);\n    else setClinics(clinics);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Form />\n\n        <table>\n          <thead>\n              <tr>\n                <th>Name</th>\n                <th>City</th>\n                <th>State</th>\n              </tr>\n          </thead>\n          <tbody>\n            {clinics.length ? (\n                clinics.map((clinic) => (\n                  <tr>\n                    <td>{clinic.name}</td>\n                    <td>{clinic.city}</td>\n                    <td>{clinic.state}</td>\n                  </tr>\n                ))\n            ) : (\n                <span\n                    className={\n                        \"h-full flex justify-center items-center\"\n                    }\n                >\n                    No clinics\n                </span>\n            )}\n          </tbody>\n        </table>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}