{"ast":null,"code":"var _jsxFileName = \"/Users/changxu/Dev/f-stats/supabase/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from \"./supabaseClient\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [clinics, setClinics] = useState([]);\n  useEffect(() => {\n    fetchClinics().catch(console.error);\n  }, []);\n\n  async function fetchClinics() {\n    let {\n      data: clinics,\n      error\n    } = await supabase.from('clinics').select('*').range(0, 1);\n    if (error) console.log(\"error\", error);else setClinics(clinics);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: clinics.length ? clinics.map(clinic => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", clinic.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h-full flex justify-center items-center\",\n            children: \"No clinics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n} // clinics.map((clinic) => (\n//  clinic.name\n// ))\n// '<td><ul>${clinics.map(clinic => '<li>${clinic.name}</li>').join(\"\")}</ul></td>'\n\n\n_s(App, \"vjbMqqFXul9QX4q/vhrigqzeYzQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/changxu/Dev/f-stats/supabase/src/App.js"],"names":["React","useEffect","useState","supabase","App","clinics","setClinics","fetchClinics","catch","console","error","data","from","select","range","log","length","map","clinic","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,GAAGC,KAAf,CAAqBC,OAAO,CAACC,KAA7B;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeH,YAAf,GAA8B;AAC5B,QAAI;AAAEI,MAAAA,IAAI,EAAEN,OAAR;AAAiBK,MAAAA;AAAjB,QAA2B,MAAMP,QAAQ,CAC1CS,IADkC,CAC7B,SAD6B,EAElCC,MAFkC,CAE3B,GAF2B,EAGlCC,KAHkC,CAG5B,CAH4B,EAGzB,CAHyB,CAArC;AAIA,QAAIJ,KAAJ,EAAWD,OAAO,CAACM,GAAR,CAAY,OAAZ,EAAqBL,KAArB,EAAX,KACKJ,UAAU,CAACD,OAAD,CAAV;AACN;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAA,+BACE;AAAA,oBACGA,OAAO,CAACW,MAAR,GACGX,OAAO,CAACY,GAAR,CAAaC,MAAD,iBACV;AAAA,mCAAI;AAAA,8BAAMA,MAAM,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,CADH,gBAKG;AACI,YAAA,SAAS,EACL,yCAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,C,CAED;AACA;AACA;AACA;;;GA5CSf,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from \"./supabaseClient\";\nimport './App.css';\n\nfunction App() {\n  const [clinics, setClinics] = useState([]);\n\n  useEffect(() => {\n    fetchClinics().catch(console.error);\n  }, []);\n\n  async function fetchClinics() {\n    let { data: clinics, error } = await supabase\n      .from('clinics')\n      .select('*')\n      .range(0, 1);\n    if (error) console.log(\"error\", error);\n    else setClinics(clinics);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <table>\n          <tbody>\n            {clinics.length ? (\n                clinics.map((clinic) => (\n                  <tr><td> {clinic.name} </td></tr>\n                ))\n            ) : (\n                <span\n                    className={\n                        \"h-full flex justify-center items-center\"\n                    }\n                >\n                    No clinics\n                </span>\n            )}\n          </tbody>\n        </table>\n      </header>\n    </div>\n  );\n}\n\n// clinics.map((clinic) => (\n//  clinic.name\n// ))\n// '<td><ul>${clinics.map(clinic => '<li>${clinic.name}</li>').join(\"\")}</ul></td>'\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}